
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	
	upstream tomcat_cmc {
		server 127.0.0.1:8080  weight=10 max_fails=2 fail_timeout=30s;
	}
	
	upstream tomcat_data {
		server 127.0.0.1:8081  weight=10 max_fails=2 fail_timeout=30s;
	}
	
	server {
        listen       8081;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   D:\IdeaProjects\vue-admin\src\data;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

	
	server {
		listen                   80;
		server_name              b.test.com;
		rewrite_log on;
		location  ~ /error/* {
			rewrite .* / last;
			expires 0d;
		}
		location  / {
			add_header 'Access-Control-Allow-Origin' '$http_origin';
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Methods' '*';
			if ($request_method = 'OPTIONS') {  
                add_header 'Access-Control-Allow-Origin' '$http_origin';  
                add_header 'Access-Control-Allow-Methods' 'GET, POST,PUT,DELETE, OPTIONS';  
                add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Pragma,Expires';  
				add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Max-Age' 3600;  
                add_header 'Content-Type' 'text/plain charset=UTF-8';  
                add_header 'Content-Length' 0;  
                return 204;  
            }  
            if ($request_method = 'POST') {  
                add_header 'Access-Control-Allow-Origin' '$http_origin';  
                add_header 'Access-Control-Allow-Methods' 'GET, POST,PUT,DELETE, OPTIONS';  
				add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Pragma,Expires';  
            }  
            if ($request_method = 'GET') {  
                add_header 'Access-Control-Allow-Origin' '$http_origin';  
                add_header 'Access-Control-Allow-Methods' 'GET, POST,DELETE,PUT, OPTIONS';  
				add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Pragma,Expires';  
            }  
			if ($request_method = 'PUT') {  
                add_header 'Access-Control-Allow-Origin' '$http_origin';  
                add_header 'Access-Control-Allow-Methods' 'GET, POST,PUT,DELETE, OPTIONS'; 
				add_header 'Access-Control-Allow-Credentials' 'true';			
                add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Pragma,Expires';  
            }  
            if ($request_method = 'DELETE') {  
                add_header 'Access-Control-Allow-Origin' '$http_origin';  
                add_header 'Access-Control-Allow-Methods' 'GET, POST,DELETE,PUT, OPTIONS';  
				add_header 'Access-Control-Allow-Credentials' 'true';			
                add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Pragma,Expires';  
            }  

			proxy_next_upstream     http_500 http_502 http_503 http_504 error timeout invalid_header;
			proxy_set_header        Host  $host;
			proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass              http://tomcat_data;
			expires                 0d;
		}
		location /logs/ {
                autoindex       off;
                deny all;
        }
	}
	
	server {
		listen                   80;
		server_name              a.test.com;
		rewrite_log on;
		location  ~ /error/* {
			rewrite .* / last;
			expires 0d;
		}
		location  / {
			
			proxy_next_upstream     http_500 http_502 http_503 http_504 error timeout invalid_header;
			proxy_set_header        Host  $host;
			proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass              http://tomcat_cmc;
			expires                 0d;
		}
		location /logs/ {
                autoindex       off;
                deny all;
        }
	}

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
